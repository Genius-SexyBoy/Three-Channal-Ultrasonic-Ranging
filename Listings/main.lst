C51 COMPILER V9.54   MAIN                                                                  05/14/2017 11:48:17 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Inc;.\oled) DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          
   2          
   3          #include <STC15F2K60S2.H>
   4          #include "Mid_oled.h"
   5          #include <stdio.h>
   6          #include "delay.h"
   7          
   8          //#include "bmp.h"
   9          
  10          sbit Tx  = P3^2;     //产生脉冲引脚，延时 20us
  11          sbit Rx  = P3^3;    //回波引脚，进入外部中断 1。这些引脚可随意改变。
  12          
  13          sbit Tx1 = P1^3;
  14          sbit Rx1 = P1^2;
  15          
  16          sbit Tx2 = P1^5;
  17          sbit Rx2 = P1^4;
  18          
  19          sbit LED = P5^5;
  20          bit TimeUp = 0;   //定时器溢出标志位
  21          long xdata Th0,Tl0,Th1,Tl1,Th2,Tl2;
  22          unsigned long time0 = 0;
  23          unsigned int Measureresult = 0;
  24          
  25          
  26          void GPIO_Init(void)
  27          {
  28   1        P1M0 = 0;  P1M1 = 0;
  29   1        P2M0 = 0;  P2M1 = 0;
  30   1        P3M0 = 0;  P3M1 = 0;
  31   1        P5M0 = 0;  P5M1 = 0;
  32   1      }
  33          
  34          
  35          unsigned int Measure(void)
  36          {
  37   1        char Del20us = 0;                 //延时变量，在超声波脉冲引脚中产生 20us 的方波
  38   1        char RxBack = 1;                 //超声波返回标志位
  39   1        TMOD = 0x01;                    //定时器工作方式 1：16 位，初值不能重装
  40   1        Tx = 0;                        //将超声波脉冲引脚电位拉低
  41   1        Th0 = 0;                      //初始化变量值
  42   1        Tl0 = 0;                     //初始化变量值
  43   1        TimeUp = 0;                 //初始化
  44   1        EA = 1;
  45   1        ET0 = 1;                  //开定时器 0 中断TR0=0;//关定时器 0
  46   1        TH0 = 0;                 //赋定时器初始值高 8 位为 0
  47   1        TL0 = 0;                //赋定时器初始值低 8 位为 0
  48   1        Tx = 1;                //拉高超声波脉冲引脚电位
  49   1        for(Del20us = 20;Del20us > 0;Del20us--);//延时 20us
  50   1        Tx = 0;              //拉低超声波脉冲引脚电位，使之产生 20us 的方波信号，使超声波模块开始工作。
  51   1        while(Rx == 0);     //等待回波引脚变 1；
  52   1        TH0 = 0;
  53   1        TL0 = 0;
  54   1        TR0 = 1;          //开定时器 0
C51 COMPILER V9.54   MAIN                                                                  05/14/2017 11:48:17 PAGE 2   

  55   1                       //使用软件查询的方式，检测超声波回波引脚，判断是否有声波返回，避免使用外部中断的
  56   1                      //形式，便于扩展多个超声波模块。
  57   1        while(RxBack)
  58   1        {
  59   2          if(Rx == 0 || TimeUp == 1)
  60   2            {
  61   3              TR0 = 0;
  62   3              Th0 = TH0;
  63   3              Tl0 = TL0;
  64   3              TR0 = 1;
  65   3              RxBack = 0;
  66   3            }
  67   2        }
  68   1        while(!TimeUp);                                         //等待定时器溢出
  69   1        time0 = (Th0 * 256 + Tl0);                             //取出定时器的值
  70   1        Measureresult = ((unsigned long)(344) * time0) / 2000;//测量的结果单位为 mm
  71   1        if(Measureresult < 30 || Measureresult > 900)
  72   1          {
  73   2            Measureresult = 0;
  74   2          }                         //过滤掉一些异常的数据，当测量出的距离不在 30－900mm 时返回值为 0
  75   1        return Measureresult;
  76   1      }
  77          
  78          
  79          unsigned int Measure_Sec(void)
  80          {
  81   1        char Del20us = 0;                 //延时变量，在超声波脉冲引脚中产生 20us 的方波
  82   1        char RxBack = 1;                 //超声波返回标志位
  83   1        TMOD = 0x01;                    //定时器工作方式 1：16 位，初值不能重装
  84   1        Tx1 = 0;                        //将超声波脉冲引脚电位拉低
  85   1        Th1 = 0;                      //初始化变量值
  86   1        Tl1 = 0;                     //初始化变量值
  87   1        TimeUp = 0;                 //初始化
  88   1        EA = 1;
  89   1        ET0 = 1;                  //开定时器 0 中断TR0=0;//关定时器 0
  90   1        TH0 = 0;                 //赋定时器初始值高 8 位为 0
  91   1        TL0 = 0;                //赋定时器初始值低 8 位为 0
  92   1        Tx1 = 1;                //拉高超声波脉冲引脚电位
  93   1        for(Del20us=20;Del20us>0;Del20us--);//延时 20us
  94   1        Tx1 = 0;              //拉低超声波脉冲引脚电位，使之产生 20us 的方波信号，使超声波模块开始工作。
  95   1        while(Rx1 == 0);     //等待回波引脚变 1；
  96   1        TH0 = 0;
  97   1        TL0 = 0;
  98   1        TR0 = 1;          //开定时器 0
  99   1                         //使用软件查询的方式，检测超声波回波引脚，判断是否有声波返回，避免使用外部中断的
 100   1                        //形式，便于扩展多个超声波模块。
 101   1        while(RxBack)
 102   1        {
 103   2          if(Rx1 == 0 || TimeUp == 1)
 104   2            {
 105   3              TR0 = 0;
 106   3              Th1 = TH0;
 107   3              Tl1 = TL0;
 108   3              TR0 = 1;
 109   3              RxBack = 0;
 110   3            }
 111   2        }
 112   1        while(!TimeUp);                                   //等待定时器溢出
 113   1        time0 = (Th1*256 + Tl1);                             //取出定时器的值
 114   1        Measureresult = ((unsigned long)(344) * time0) / 2000;//测量的结果单位为 mm
 115   1        if(Measureresult < 30 || Measureresult > 900)
 116   1          {
C51 COMPILER V9.54   MAIN                                                                  05/14/2017 11:48:17 PAGE 3   

 117   2            Measureresult = 0;
 118   2          }                         //过滤掉一些异常的数据，当测量出的距离不在 30－900mm 时返回值为 0
 119   1        return Measureresult;
 120   1      }
 121          
 122          
 123          
 124          unsigned int Measure_Thr(void)
 125          {
 126   1        char Del20us = 0;                 //延时变量，在超声波脉冲引脚中产生 20us 的方波
 127   1        char RxBack = 1;                 //超声波返回标志位
 128   1        TMOD = 0x01;                    //定时器工作方式 1：16 位，初值不能重装
 129   1        Tx2 = 0;                        //将超声波脉冲引脚电位拉低
 130   1        Th2 = 0;                      //初始化变量值
 131   1        Tl2 = 0;                     //初始化变量值
 132   1        TimeUp = 0;                 //初始化
 133   1        EA = 1;
 134   1        ET0 = 1;                  //开定时器 0 中断TR0=0;//关定时器 0
 135   1        TH0 = 0;                 //赋定时器初始值高 8 位为 0
 136   1        TL0 = 0;                //赋定时器初始值低 8 位为 0
 137   1        Tx2 = 1;                //拉高超声波脉冲引脚电位
 138   1        for(Del20us=20;Del20us>0;Del20us--);//延时 20us
 139   1        Tx2 = 0;              //拉低超声波脉冲引脚电位，使之产生 20us 的方波信号，使超声波模块开始工作。
 140   1        while(Rx2 == 0);     //等待回波引脚变 1；
 141   1        TH0 = 0;
 142   1        TL0 = 0;
 143   1        TR0 = 1;          //开定时器 0
 144   1                       //使用软件查询的方式，检测超声波回波引脚，判断是否有声波返回，避免使用外部中断的
 145   1                      //形式，便于扩展多个超声波模块。
 146   1        while(RxBack)
 147   1        {
 148   2          if(Rx2 == 0 || TimeUp == 1)
 149   2            {
 150   3              TR0 = 0;
 151   3              Th2 = TH0;
 152   3              Tl2 = TL0;
 153   3              TR0 = 1;
 154   3              RxBack = 0;
 155   3            }
 156   2        }
 157   1        while(!TimeUp);                                   //等待定时器溢出
 158   1        time0 = (Th2 * 256 + Tl2);                             //取出定时器的值
 159   1        Measureresult = ((unsigned long)(344) * time0) / 2000;//测量的结果单位为 mm
 160   1        if(Measureresult < 30 || Measureresult > 900)
 161   1          {
 162   2            Measureresult = 0;
 163   2          }                         //过滤掉一些异常的数据，当测量出的距离不在 30－900mm 时返回值为 0
 164   1        return Measureresult;
 165   1      }
 166          
 167          
 168          
 169          void T0_time() interrupt 1
 170          {
 171   1        TimeUp = 1;
 172   1      }
 173          
 174          void main(void)
 175          {
 176   1        unsigned int ge,shi,bai;
 177   1        unsigned char flag;
 178   1        unsigned int j = 0;
C51 COMPILER V9.54   MAIN                                                                  05/14/2017 11:48:17 PAGE 4   

 179   1        GPIO_Init();
 180   1        Mid_oled_Display_Control(DisInit);
 181   1        Mid_oled_Display_Control(Char_Size_16);
 182   1        LED = 1;
 183   1        while(1)
 184   1        {
 185   2          ge   = Measure()%100%10;
 186   2          shi  = Measure()%100/10;
 187   2          bai  = Measure()/100;
 188   2          ShowData(2,0,bai);
 189   2          ShowData(2,10,shi);
 190   2          ShowData(2,20,ge);
 191   2          ge  = Measure_Sec()%100%10;
 192   2          shi = Measure_Sec()%100/10;
 193   2          bai = Measure_Sec()/100;
 194   2          ShowData(4,0,bai);
 195   2          ShowData(4,10,shi);
 196   2          ShowData(4,20,ge);
 197   2          ge  = Measure_Thr()%100%10;
 198   2          shi = Measure_Thr()%100/10;
 199   2          bai = Measure_Thr()/100;
 200   2          ShowData(6,0,bai);
 201   2          ShowData(6,10,shi);
 202   2          ShowData(6,20,ge);
 203   2          flag = 0; 
 204   2          Mid_oled_Display_Show(30,2,ShowString,"mm",NULL);   
 205   2          Mid_oled_Display_Show(30,4,ShowString,"mm",NULL); 
 206   2          Mid_oled_Display_Show(30,6,ShowString,"mm",NULL);
 207   2          LED = 0;
 208   2          delayms(50);
 209   2          LED = 1;
 210   2          delayms(50);
 211   2        }
 212   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1102    ----
   CONSTANT SIZE    =      3    ----
   XDATA SIZE       =     24    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
