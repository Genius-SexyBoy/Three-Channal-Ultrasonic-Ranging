C51 COMPILER V9.54   OLED                                                                  05/14/2017 11:48:18 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE oled\oled.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Inc;.\oled) DEBUG OBJECTEX
                    -TEND PRINT(.\Listings\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////   
   2          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3          //  文 件 名   : main.c
   4          //  版 本 号   : v2.0
   5          //  作    者   : 
   6          //  生成日期   : 2014-0101
   7          //  最近修改   : 
   8          //  功能描述   : OLED 4接口演示例程(51系列)
   9          //              说明: 
  10          //              ----------------------------------------------------------------
  11          //              GND    电源地
  12          //              VCC  接5V或3.3v电源
  13          //              SCL   P1^0
  14          //              SDA   P1^1
  15          //              RES  接P12
  16          //              DC   接P13
  17          //              CS   接P14   -----本模块片选脚已经帮用户接地，无需再接               
  18          //              ----------------------------------------------------------------
  19          //******************************************************************************/。
  20          #include "oled.h"
  21          //#include "stdlib.h"
  22          #include "oledfont.h"    
  23          //#include "delay.h"
  24          //OLED的显存
  25          //存放格式如下.
  26          //[0]0 1 2 3 ... 127  
  27          //[1]0 1 2 3 ... 127  
  28          //[2]0 1 2 3 ... 127  
  29          //[3]0 1 2 3 ... 127  
  30          //[4]0 1 2 3 ... 127  
  31          //[5]0 1 2 3 ... 127  
  32          //[6]0 1 2 3 ... 127  
  33          //[7]0 1 2 3 ... 127  
  34          
  35          
  36          unsigned char SIZE = 12;
  37                 
  38          void delay_ms(unsigned int ms)
  39          {                         
  40   1        unsigned int a;
  41   1        while(ms)
  42   1        {
  43   2          a=200;
  44   2          while(a--);
  45   2          ms--;
  46   2        }
  47   1        return;
  48   1      }
  49          #if OLED_MODE==1
  50          //向SSD1106写入一个字节。
  51          //dat:要写入的数据/命令
  52          //cmd:数据/命令标志 0,表示命令;1,表示数据;
  53          
  54          /**********************************************
C51 COMPILER V9.54   OLED                                                                  05/14/2017 11:48:18 PAGE 2   

  55          //IIC Start
  56          **********************************************/
  57          void IIC_Start()
  58          {
  59   1        i2c_master_start();
  60   1      }
  61          
  62          /**********************************************
  63          //IIC Stop
  64          **********************************************/
  65          void IIC_Stop()
  66          {
  67   1        i2c_master_stop();
  68   1      }
  69          
  70          
  71          void IIC_Wait_Ack()
  72          {
  73   1        i2c_master_waitAck();
  74   1      }
  75          
  76          /**********************************************
  77          // IIC Write byte
  78          **********************************************/
  79          
  80          void Write_IIC_Byte(unsigned char IIC_Byte)
  81          {
  82   1        i2c_master_writeByte(IIC_Byte);
  83   1      }
  84          
  85          /**********************************************
  86          // IIC Write Command
  87          **********************************************/
  88          void Write_IIC_Command(unsigned char IIC_Command)
  89          {
  90   1         IIC_Start();
  91   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
  92   1        IIC_Wait_Ack(); 
  93   1         Write_IIC_Byte(0x00);      //write command
  94   1        IIC_Wait_Ack(); 
  95   1         Write_IIC_Byte(IIC_Command); 
  96   1        IIC_Wait_Ack(); 
  97   1         IIC_Stop();
  98   1      }
  99          /**********************************************
 100          // IIC Write Data
 101          **********************************************/
 102          void Write_IIC_Data(unsigned char IIC_Data)
 103          {
 104   1         IIC_Start();
 105   1         Write_IIC_Byte(0x78);      //D/C#=0; R/W#=0
 106   1        IIC_Wait_Ack(); 
 107   1         Write_IIC_Byte(0x40);      //write data
 108   1        IIC_Wait_Ack(); 
 109   1         Write_IIC_Byte(IIC_Data);
 110   1        IIC_Wait_Ack(); 
 111   1         IIC_Stop();
 112   1      }
 113          void OLED_WR_Byte(u8 dat,u8 cmd)
 114          {
 115   1        if(cmd)
 116   1            {
C51 COMPILER V9.54   OLED                                                                  05/14/2017 11:48:18 PAGE 3   

 117   2      
 118   2         Write_IIC_Data(dat);
 119   2         
 120   2          }
 121   1        else {
 122   2         Write_IIC_Command(dat);
 123   2          
 124   2        }
 125   1      
 126   1      
 127   1      }       
 128          #else
              //向SSD1306写入一个字节。
              //dat:要写入的数据/命令
              //cmd:数据/命令标志 0,表示命令;1,表示数据;
              void OLED_WR_Byte(u8 dat,u8 cmd)
              { 
                u8 i;       
                if(cmd)
                  OLED_DC_Set();
                else 
                  OLED_DC_Clr();      
                OLED_CS_Clr();
                for(i=0;i<8;i++)
                {       
                  OLED_SCLK_Clr();
                  if(dat&0x80)
                    {
                     OLED_SDIN_Set();
                    }
              else
                     OLED_SDIN_Clr();
                      OLED_SCLK_Set();
                  dat<<=1;   
                }             
                OLED_CS_Set();
                OLED_DC_Set();      
              } 
              #endif
 156          
 157          
 158          
 159            void OLED_Set_Pos(unsigned char x, unsigned char y) 
 160          { 
 161   1        OLED_WR_Byte(0xb0+y,OLED_CMD);
 162   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 163   1        OLED_WR_Byte((x&0x0f)|0x01,OLED_CMD); 
 164   1      }       
 165          //开启OLED显示    
 166          void OLED_Display_On(void)
 167          {
 168   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 169   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 170   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 171   1      }
 172          //关闭OLED显示     
 173          void OLED_Display_Off(void)
 174          {
 175   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 176   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 177   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 178   1      }            
C51 COMPILER V9.54   OLED                                                                  05/14/2017 11:48:18 PAGE 4   

 179          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 180          void OLED_Clear(void)  
 181          {  
 182   1        u8 i,n;       
 183   1        for(i=0;i<8;i++)  
 184   1        {  
 185   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 186   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 187   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 188   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 189   2        } //更新显示
 190   1      }
 191          
 192          
 193          //在指定位置显示一个字符,包括部分字符
 194          //x:0~127
 195          //y:0~63
 196          //mode:0,反白显示;1,正常显示         
 197          //size:选择字体 16/12 
 198          void OLED_ShowChar(u8 x,u8 y,u8 chr)
 199          {       
 200   1        unsigned char c=0,i=0;  
 201   1          c=chr-' ';//得到偏移后的值      
 202   1          if(x>Max_Column-1){x=0;y=y+2;}
 203   1          if(SIZE ==16)
 204   1            {
 205   2            OLED_Set_Pos(x,y);  
 206   2            for(i=0;i<8;i++)
 207   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 208   2            OLED_Set_Pos(x,y+1);
 209   2            for(i=0;i<8;i++)
 210   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 211   2            }
 212   1            else {  
 213   2              OLED_Set_Pos(x,y);
 214   2              for(i=0;i<6;i++)
 215   2              OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 216   2              
 217   2            }
 218   1      }
 219          //m^n函数
 220          //u32 oled_pow(u8 m,u8 n)
 221          //{
 222          //  u32 result=1;  
 223          //  while(n--)result*=m;    
 224          //  return result;
 225          //}         
 226          //显示2个数字
 227          //x,y :起点坐标  
 228          //len :数字的位数
 229          //size:字体大小
 230          //mode:模式 0,填充模式;1,叠加模式
 231          //num:数值(0~4294967295);       
 232          //void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 233          //{           
 234          //  u8 t,temp;
 235          //  u8 enshow=0;               
 236          //  for(t=0;t<len;t++)
 237          //  {
 238          //    temp=(num/oled_pow(10,len-t-1))%10;
 239          //    if(enshow==0&&t<(len-1))
 240          //    {
C51 COMPILER V9.54   OLED                                                                  05/14/2017 11:48:18 PAGE 5   

 241          //      if(temp==0)
 242          //      {
 243          //        OLED_ShowChar(x+(size2/2)*t,y,' ');
 244          //        continue;
 245          //      }else enshow=1; 
 246          //       
 247          //    }
 248          //    OLED_ShowChar(x+(size2/2)*t,y,temp+'0'); 
 249          //  }
 250          //} 
 251          //显示一个字符号串
 252          void OLED_ShowString(u8 x,u8 y,u8 *chr)
 253          {
 254   1        unsigned char j=0;
 255   1        while (chr[j]!='\0')
 256   1        {   OLED_ShowChar(x,y,chr[j]);
 257   2            x+=8;
 258   2          if(x>120){x=0;y+=2;}
 259   2            j++;
 260   2        }
 261   1      }
 262          
 263          u8 OLED_LookForChinese(u8 *Data,u8 *Num)
 264          {
 265   1        u8 wordNum;
 266   1          for (wordNum=0; wordNum<20; wordNum++)
 267   1          {
 268   2              //--查询要写的字在字库中的位置--//
 269   2            if ((CN16CHAR[wordNum].Index[0] == *Data)
 270   2                 &&(CN16CHAR[wordNum].Index[1] == *(Data+1)))
 271   2            {
 272   3              Num[0] = wordNum;
 273   3              return OK;
 274   3            }//if查到字结束   
 275   2          } //for查字结束 
 276   1          return ERROR;
 277   1      }
 278          //显示汉字
 279          unsigned char OLED_ShowCHinese(u8 x,u8 y,u8 *Data)
 280          {               
 281   1        u8 t,adder=0;
 282   1        u8 Num;
 283   1        
 284   1        while(*Data != '\0')
 285   1        {
 286   2        OLED_Set_Pos(x+adder,y);
 287   2        if(OLED_LookForChinese(Data,&Num)==ERROR)
 288   2          return ERROR;
 289   2          for(t=0;t<16;t++)
 290   2          {
 291   3              OLED_WR_Byte(CN16CHAR[Num].Msk[t],OLED_DATA);
 292   3           }  
 293   2          OLED_Set_Pos(x+adder,y+1);  
 294   2          for(t=0;t<16;t++)
 295   2            { 
 296   3              OLED_WR_Byte(CN16CHAR[Num].Msk[t+16],OLED_DATA);
 297   3            } 
 298   2          adder += 16;
 299   2          Data += 2;
 300   2        } 
 301   1      return OK;  
 302   1      }
C51 COMPILER V9.54   OLED                                                                  05/14/2017 11:48:18 PAGE 6   

 303          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 304          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 305          {   
 306   1       unsigned int j=0;
 307   1       unsigned char x,y;
 308   1        
 309   1        if(y1%8==0) y=y1/8;      
 310   1        else y=y1/8+1;
 311   1        for(y=y0;y<y1;y++)
 312   1        {
 313   2          OLED_Set_Pos(x0,y);
 314   2          for(x=x0;x<x1;x++)
 315   2            {      
 316   3              OLED_WR_Byte(BMP[j++],OLED_DATA);       
 317   3            }
 318   2        }
 319   1      } 
 320          
 321          
 322          //初始化SSD1306             
 323          void OLED_Init(void)
 324          {
 325   1       
 326   1      
 327   1       
 328   1        OLED_RST_Set();
 329   1        delay_ms(100);
 330   1        OLED_RST_Clr();
 331   1        delay_ms(100);
 332   1        OLED_RST_Set(); 
 333   1        /*          
 334   1        OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 335   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 336   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 337   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 338   1        OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 339   1        OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
 340   1        OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 341   1        OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 342   1        OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
 343   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 344   1        OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
 345   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)
 346   1        OLED_WR_Byte(0x00,OLED_CMD);//-not offset
 347   1        OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 348   1        OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 349   1        OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 350   1        OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 351   1        OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 352   1        OLED_WR_Byte(0x12,OLED_CMD);
 353   1        OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
 354   1        OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
 355   1        OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 356   1        OLED_WR_Byte(0x02,OLED_CMD);//
 357   1        OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 358   1        OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 359   1        OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 360   1        OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
 361   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 362   1        */
C51 COMPILER V9.54   OLED                                                                  05/14/2017 11:48:18 PAGE 7   

 363   1      
 364   1        OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 365   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 366   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 367   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 368   1        OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 369   1        OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
 370   1        OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 371   1        OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 372   1        OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
 373   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 374   1        OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
 375   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)
 376   1        OLED_WR_Byte(0x00,OLED_CMD);//-not offset
 377   1        OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 378   1        OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 379   1        OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 380   1        OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 381   1        OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 382   1        OLED_WR_Byte(0x12,OLED_CMD);
 383   1        OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
 384   1        OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
 385   1        OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 386   1        OLED_WR_Byte(0x02,OLED_CMD);//
 387   1        OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 388   1        OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 389   1        OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 390   1        OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
 391   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 392   1        
 393   1        OLED_WR_Byte(0xAF,OLED_CMD); /*display ON*/ 
 394   1        OLED_Clear();
 395   1        OLED_Set_Pos(0,0);  
 396   1      }  
 397          
 398          
 399          unsigned char OLED_Size(unsigned char SizeData)
 400          {
 401   1        SIZE = SizeData;
 402   1        return OK;
 403   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1072    ----
   CONSTANT SIZE    =   2514    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      41
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
